Q1. Write a program to sort an array in descending order using bubble sort.
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}
ANS:-public class BubbleSortDescending {
    public static void main(String[] args) {
        int[] array = {3, 5, 1, 6, 0};
        bubbleSortDescending(array);
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            if (i != 0) {
                System.out.print(", ");
            }
            System.out.print(array[i]);
        }
        System.out.println("}");
    }

    public static void bubbleSortDescending(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (array[j] < array[j + 1]) {
                    // swap array[j] and array[j+1]
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }
}

Q2. WAP to sort an array in descending order using selection sort
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}
ANS:-public class SelectionSortDescending {
    public static void main(String[] args) {
        int[] array = {3, 5, 1, 6, 0};
        selectionSortDescending(array);
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            if (i != 0) {
                System.out.print(", ");
            }
            System.out.print(array[i]);
        }
        System.out.println("}");
    }

    public static void selectionSortDescending(int[] array) {
        int n = array.length;
        for (int i = 0; i < n - 1; i++) {
            int maxIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (array[j] > array[maxIndex]) {
                    maxIndex = j;
                }
            }
            if (maxIndex != i) {
                // swap array[i] and array[maxIndex]
                int temp = array[i];
                array[i] = array[maxIndex];
                array[maxIndex] = temp;
            }
        }
    }
}

Q3. WAP to sort an array in decreasing order using insertion sort
Input Array {3,5,1,6,0}
Output Array: {6, 5, 3, 1, 0}
ANS:-public class InsertionSortDescending {
    public static void main(String[] args) {
        int[] array = {3, 5, 1, 6, 0};
        insertionSortDescending(array);
        System.out.print("Output Array: {");
        for (int i = 0; i < array.length; i++) {
            if (i != 0) {
                System.out.print(", ");
            }
            System.out.print(array[i]);
        }
        System.out.println("}");
    }

    public static void insertionSortDescending(int[] array) {
        int n = array.length;
        for (int i = 1; i < n; ++i) {
            int key = array[i];
            int j = i - 1;

            /* Move elements of array[0..i-1], that are greater than key, to one position ahead of their current position */
            while (j >= 0 && array[j] < key) {
                array[j + 1] = array[j];
                j = j - 1;
            }
            array[j + 1] = key;
        }
    }
}

Q4. Find out how many pass would be required to sort the following array in decreasing order
using bubble sort
Input Array {3,5,1,6,0}
ANS:-Pass 1:

Comparing 3 and 5, no swap is needed.
Comparing 5 and 1, swap is needed.
Comparing 5 and 6, no swap is needed.
Comparing 6 and 0, swap is needed.
Array after pass 1: {5, 3, 6, 1, 0}
Pass 2:

Comparing 5 and 3, swap is needed.
Comparing 5 and 6, no swap is needed.
Comparing 6 and 1, swap is needed.
Array after pass 2: {5, 6, 3, 1, 0}
Pass 3:

Comparing 5 and 6, no swap is needed.
Comparing 6 and 3, swap is needed.
Array after pass 3: {6, 5, 3, 1, 0}
Pass 4:

Comparing 6 and 5, swap is needed.
Array after pass 4: {6, 5, 3, 1, 0}
Pass 5:

Comparing 6 and 5, swap is needed.
Array after pass 5: {6, 5, 3, 1, 0}
No swaps are needed in Pass 6. Therefore, the array is sorted after 5 passes.

So, it requires 5 passes to sort the given array in decreasing order using bubble sort.
Q5. Find out the number of iterations to sort the array in descending order using selection sort.
Input Array {3,5,1,6,0}
ANS:-
Pass 1: Find the maximum element and swap it with the element in the first position.
Pass 2: Find the maximum element from the remaining elements and swap it with the element in the second position.
Repeat until all elements are in their correct positions.
Let's analyze the given array {3, 5, 1, 6, 0}:

Pass 1:

Maximum element is 6, swap with element in the first position.
Array after pass 1: {6, 5, 1, 3, 0}
Pass 2:

Maximum element from the remaining array is 5, swap with element in the second position.
Array after pass 2: {6, 5, 1, 3, 0}
Pass 3:

Maximum element from the remaining array is 3, swap with element in the third position.
Array after pass 3: {6, 5, 3, 1, 0}
Pass 4:

Maximum element from the remaining array is 1, swap with element in the fourth position.
Array after pass 4: {6, 5, 3, 1, 0}
Pass 5:

Maximum element from the remaining array is 0, swap with element in the fifth position.
Array after pass 5: {6, 5, 3, 1, 0}
After the fifth iteration, the array is sorted. Therefore, it requires 5 iterations to sort the given array in descending order using selection sort.